{"version":3,"sources":["UIComponents/Flex.js","InstallButton.js","Header.js","Leaderboard.js","App.js","index.js"],"names":["Flex","_ref","children","className","direction","align","justify","gap","React","createElement","style","display","flexDirection","alignItems","justifyContent","InstallButton","type","onClick","window","location","href","value","Header","src","width","alt","Leaderboard","leaderboard","setLeaderboard","useState","useEffect","fetchLeaderboard","async","data","axios","get","sort","a","b","score","e","console","log","renderLeaderboardUser","user","i","portalId","id","split","key","username","email","map","App","ReactDOM","render","document","getElementById"],"mappings":"yLAmBeA,MAjBFC,IAA8D,IAA7D,SAAEC,EAAQ,UAAEC,EAAS,UAAEC,EAAS,MAAEC,EAAK,QAAEC,EAAO,IAAEC,GAAKN,EACnE,OACEO,IAAAC,cAAA,OACEN,UAAWA,EACXO,MAAO,CACLC,QAAS,OACTC,cAAeR,EACfS,WAAYR,EACZS,eAAgBR,EAChBC,QAGDL,ICEQa,MAbOA,IAElBP,IAAAC,cAACT,EAAI,CAACM,QAAQ,UACZE,IAAAC,cAAA,SACEN,UAAU,iBACVa,KAAK,SACLC,QAASA,IAAOC,OAAOC,SAASC,KAAO,gBACvCC,MAAM,qCCICC,MAVAA,IAEXd,IAAAC,cAACT,EAAI,CAACG,UAAU,SAASE,MAAM,SAASD,UAAU,UAChDI,IAAAC,cAAA,OAAKc,IAAI,aAAab,MAAO,CAAEc,MAAO,SAAWC,IAAI,UACrDjB,IAAAC,cAAA,QAAMN,UAAU,eAAc,6BAC9BK,IAAAC,cAACM,EAAa,O,QC+CLW,MApDKA,KAClB,MAAOC,EAAaC,GAAkBC,mBAAS,IAE/CC,oBAAU,KACRC,KACC,IAEH,MAAMA,EAAmBC,UACvB,IACE,MAAM,KAAEC,SAAeC,IAAMC,IAAI,oBACjCP,EAAeK,EAAKG,KAAK,CAACC,EAAGC,IAAMA,EAAEC,MAAQF,EAAEE,QAC/C,MAAOC,GACPC,QAAQC,IAAIF,KAIVG,EAAwBA,CAACC,EAAMC,KACnC,MAAMC,EAAWF,EAAKG,GAAGC,MAAM,KAAK,GACpC,OACExC,IAAAC,cAAA,OAAKwC,IAAKJ,EAAG1C,UAAU,oBACrBK,IAAAC,cAAA,OAAKN,UAAU,oBAAmB,IAAE0C,EAAI,GACxCrC,IAAAC,cAACT,EAAI,CAACK,MAAM,WAAWE,IAAI,QACzBC,IAAAC,cAAA,UAAKmC,EAAKM,UAAYN,EAAKO,OAC3B3C,IAAAC,cAAA,QAAMN,UAAU,qBAAoB,eACrByC,EAAKL,MAAM,QAAqB,IAAfK,EAAKL,MAAc,GAAK,IAAI,QACzDO,EAAS,QAepB,OACEtC,IAAAC,cAACT,EAAI,CAACG,UAAU,cAAcE,MAAM,SAASD,UAAU,UACrDI,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,QAAMN,UAAU,eAAc,0GAT9BK,IAAAC,cAACT,EAAI,CAACG,UAAU,QAAQC,UAAU,SAASC,MAAM,UAC9CsB,EAAYyB,IAAIT,MCtBVU,MAXHA,IAER7C,IAAAC,cAACT,EAAI,CAACG,UAAU,MAAMC,UAAU,UAC9BI,IAAAC,cAACa,EAAM,MACPd,IAAAC,cAAA,OAAKN,UAAU,WACbK,IAAAC,cAACiB,EAAW,QCPpB4B,IAASC,OAAO/C,IAAAC,cAAC4C,EAAG,MAAKG,SAASC,eAAe,U","file":"static/js/main.af27debe.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Flex = ({ children, className, direction, align, justify, gap }) => {\n  return (\n    <div\n      className={className}\n      style={{\n        display: \"flex\",\n        flexDirection: direction,\n        alignItems: align,\n        justifyContent: justify,\n        gap,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Flex;\n","import React from \"react\";\nimport Flex from \"./UIComponents/Flex\";\n\nconst InstallButton = () => {\n  return (\n    <Flex justify=\"center\">\n      <input\n        className=\"install-button\"\n        type=\"button\"\n        onClick={() => (window.location.href = \"oauth/install\")}\n        value=\"Install In Your HubSpot Account\"\n      />\n    </Flex>\n  );\n};\n\nexport default InstallButton;\n","import React from \"react\";\nimport InstallButton from \"./InstallButton\";\nimport Flex from \"./UIComponents/Flex\";\n\nconst Header = () => {\n  return (\n    <Flex className=\"header\" align=\"center\" direction=\"column\">\n      <img src=\"/waldo.png\" style={{ width: \"100px\" }} alt=\"waldo\" />\n      <span className=\"p-bottom-10\">Where's Waldo HubSpot App</span>\n      <InstallButton />\n    </Flex>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Flex from \"./UIComponents/Flex\";\n\nconst Leaderboard = () => {\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  useEffect(() => {\n    fetchLeaderboard();\n  }, []);\n\n  const fetchLeaderboard = async () => {\n    try {\n      const { data } = await axios.get(\"/api/leaderboard\");\n      setLeaderboard(data.sort((a, b) => b.score - a.score));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderLeaderboardUser = (user, i) => {\n    const portalId = user.id.split(\":\")[0];\n    return (\n      <div key={i} className=\"leaderboard-card\">\n        <div className=\"leaderboard-rank\">#{i + 1}</div>\n        <Flex align=\"baseline\" gap=\"10px\">\n          <h3>{user.username || user.email}</h3>\n          <span className=\"leaderboard-score\">\n            found Waldo {user.score} time{user.score === 1 ? \"\" : \"s\"} in (\n            {portalId})\n          </span>\n        </Flex>\n      </div>\n    );\n  };\n\n  const renderLeaders = () => {\n    return (\n      <Flex className=\"w-100\" direction=\"column\" align=\"center\">\n        {leaderboard.map(renderLeaderboardUser)}\n      </Flex>\n    );\n  };\n\n  return (\n    <Flex className=\"leaderboard\" align=\"center\" direction=\"column\">\n      <h1>Leaderboard</h1>\n      <span className=\"p-bottom-10\">\n        Join the leaderbord by installing the app and using the dropdown action\n        in the Where's Waldo CRM card!\n      </span>\n      {renderLeaders()}\n    </Flex>\n  );\n};\n\nexport default Leaderboard;\n","import \"./styles.css\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Leaderboard from \"./Leaderboard\";\nimport Flex from \"./UIComponents/Flex\";\n\nconst App = () => {\n  return (\n    <Flex className=\"app\" direction=\"column\">\n      <Header />\n      <div className=\"content\">\n        <Leaderboard />\n      </div>\n    </Flex>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}