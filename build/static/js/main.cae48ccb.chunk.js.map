{"version":3,"sources":["UIComponents/Flex.js","InstallButton.js","Header.js","InfoSection.js","Leaderboard.js","App.js","index.js"],"names":["Flex","_ref","children","className","direction","align","justify","gap","React","createElement","style","display","flexDirection","alignItems","justifyContent","InstallButton","type","onClick","window","location","href","value","Header","src","width","alt","InfoSection","Leaderboard","leaderboard","setLeaderboard","useState","useEffect","fetchLeaderboard","async","data","axios","get","sort","a","b","score","e","console","log","renderLeaderboardUser","user","i","portalId","id","split","key","username","email","map","App","ReactDOM","render","document","getElementById"],"mappings":"yLAmBeA,MAjBFC,IAA8D,IAA7D,SAAEC,EAAQ,UAAEC,EAAS,UAAEC,EAAS,MAAEC,EAAK,QAAEC,EAAO,IAAEC,GAAKN,EACnE,OACEO,IAAAC,cAAA,OACEN,UAAWA,EACXO,MAAO,CACLC,QAAS,OACTC,cAAeR,EACfS,WAAYR,EACZS,eAAgBR,EAChBC,QAGDL,ICEQa,MAbOA,IAElBP,IAAAC,cAACT,EAAI,CAACM,QAAQ,UACZE,IAAAC,cAAA,SACEN,UAAU,iBACVa,KAAK,SACLC,QAASA,IAAOC,OAAOC,SAASC,KAAO,gBACvCC,MAAM,wBCICC,MAVAA,IAEXd,IAAAC,cAACT,EAAI,CAACG,UAAU,SAASE,MAAM,SAASD,UAAU,UAChDI,IAAAC,cAAA,OAAKc,IAAI,aAAab,MAAO,CAAEc,MAAO,QAAUC,IAAI,UACpDjB,IAAAC,cAAA,QAAMN,UAAU,eAAc,6BAC9BK,IAAAC,cAACM,EAAa,OCSLW,MAfKA,IAEhBlB,IAAAC,cAACT,EAAI,CAACG,UAAU,gBACdK,IAAAC,cAAA,QAAMN,UAAU,eAAc,gX,QCoDrBwB,MAtDKA,KAClB,MAAOC,EAAaC,GAAkBC,mBAAS,IAE/CC,oBAAU,KACRC,KACC,IAEH,MAAMA,EAAmBC,UACvB,IACE,MAAM,KAAEC,SAAeC,IAAMC,IAAI,oBACjCP,EAAeK,EAAKG,KAAK,CAACC,EAAGC,IAAMA,EAAEC,MAAQF,EAAEE,QAC/C,MAAOC,GACPC,QAAQC,IAAIF,KAIVG,EAAwBA,CAACC,EAAMC,KACnC,MAAMC,EAAWF,EAAKG,GAAGC,MAAM,KAAK,GACpC,OACEzC,IAAAC,cAACT,EAAI,CAACkD,IAAKJ,EAAG3C,UAAU,mBAAmBI,IAAI,OAAOF,MAAM,UAC1DG,IAAAC,cAAA,OAAKN,UAAU,oBACbK,IAAAC,cAAA,UAAI,IAAEqC,EAAI,IAEZtC,IAAAC,cAACT,EAAI,CAACI,UAAU,SAASG,IAAI,OAC3BC,IAAAC,cAAA,UAAKoC,EAAKM,UAAYN,EAAKO,OAC3B5C,IAAAC,cAAA,YAAM,eACSoC,EAAKL,MAAM,QAAqB,IAAfK,EAAKL,MAAc,GAAK,IAAI,QACzDO,EAAS,QAepB,OACEvC,IAAAC,cAACT,EAAI,CAACG,UAAU,cAAcE,MAAM,SAASD,UAAU,UACrDI,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,QAAMN,UAAU,cAAcO,MAAO,CAAEc,MAAO,QAAS,yHATvDhB,IAAAC,cAACT,EAAI,CAACG,UAAU,QAAQC,UAAU,SAASC,MAAM,UAC9CuB,EAAYyB,IAAIT,MCtBVU,MAZHA,IAER9C,IAAAC,cAACT,EAAI,CAACG,UAAU,MAAMC,UAAU,UAC9BI,IAAAC,cAACa,EAAM,MACPd,IAAAC,cAAA,OAAKN,UAAU,WACbK,IAAAC,cAACiB,EAAW,MACZlB,IAAAC,cAACkB,EAAW,QCTpB4B,IAASC,OAAOhD,IAAAC,cAAC6C,EAAG,MAAKG,SAASC,eAAe,U","file":"static/js/main.cae48ccb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Flex = ({ children, className, direction, align, justify, gap }) => {\n  return (\n    <div\n      className={className}\n      style={{\n        display: \"flex\",\n        flexDirection: direction,\n        alignItems: align,\n        justifyContent: justify,\n        gap,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Flex;\n","import React from \"react\";\nimport Flex from \"./UIComponents/Flex\";\n\nconst InstallButton = () => {\n  return (\n    <Flex justify=\"center\">\n      <input\n        className=\"install-button\"\n        type=\"button\"\n        onClick={() => (window.location.href = \"oauth/install\")}\n        value=\"Install In HubSpot\"\n      />\n    </Flex>\n  );\n};\n\nexport default InstallButton;\n","import React from \"react\";\nimport InstallButton from \"./InstallButton\";\nimport Flex from \"./UIComponents/Flex\";\n\nconst Header = () => {\n  return (\n    <Flex className=\"header\" align=\"center\" direction=\"column\">\n      <img src=\"/waldo.png\" style={{ width: \"85px\" }} alt=\"waldo\" />\n      <span className=\"p-bottom-10\">Where's Waldo HubSpot App</span>\n      <InstallButton />\n    </Flex>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Flex from \"./UIComponents/Flex\";\n\nconst InfoSection = () => {\n  return (\n    <Flex className=\"info-section\">\n      <span className=\"p-bottom-10\">\n        Installing this app in your HubSpot account will automatically hide\n        Waldo on one of your contacts using a custom property. Look for the\n        Where's Waldo CRM card that will appear on each of your contacts. Make\n        sure to mark Waldo as found whenever you find him! Marking him as found\n        will update your score and then randomly hide Waldo on another one of\n        your contacts.\n      </span>\n    </Flex>\n  );\n};\n\nexport default InfoSection;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Flex from \"./UIComponents/Flex\";\n\nconst Leaderboard = () => {\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  useEffect(() => {\n    fetchLeaderboard();\n  }, []);\n\n  const fetchLeaderboard = async () => {\n    try {\n      const { data } = await axios.get(\"/api/leaderboard\");\n      setLeaderboard(data.sort((a, b) => b.score - a.score));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderLeaderboardUser = (user, i) => {\n    const portalId = user.id.split(\":\")[0];\n    return (\n      <Flex key={i} className=\"leaderboard-card\" gap=\"20px\" align=\"center\">\n        <div className=\"leaderboard-rank\">\n          <h2>#{i + 1}</h2>\n        </div>\n        <Flex direction=\"column\" gap=\"5px\">\n          <h3>{user.username || user.email}</h3>\n          <span>\n            found Waldo {user.score} time{user.score === 1 ? \"\" : \"s\"} in (\n            {portalId})\n          </span>\n        </Flex>\n      </Flex>\n    );\n  };\n\n  const renderLeaders = () => {\n    return (\n      <Flex className=\"w-100\" direction=\"column\" align=\"center\">\n        {leaderboard.map(renderLeaderboardUser)}\n      </Flex>\n    );\n  };\n\n  return (\n    <Flex className=\"leaderboard\" align=\"center\" direction=\"column\">\n      <h1>Top Waldo Finders</h1>\n      <span className=\"p-bottom-10\" style={{ width: \"70%\" }}>\n        Join the Waldo finding leaderboard by installing the app and using the\n        dropdown action in the Where's Waldo CRM card!\n      </span>\n      {renderLeaders()}\n    </Flex>\n  );\n};\n\nexport default Leaderboard;\n","import \"./styles.css\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport InfoSection from \"./InfoSection\";\nimport Leaderboard from \"./Leaderboard\";\nimport Flex from \"./UIComponents/Flex\";\n\nconst App = () => {\n  return (\n    <Flex className=\"app\" direction=\"column\">\n      <Header />\n      <div className=\"content\">\n        <InfoSection />\n        <Leaderboard />\n      </div>\n    </Flex>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}